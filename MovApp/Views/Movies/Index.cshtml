@using Infrastructure.DTOs.Movie
@using System.Security.Claims
@using Infrastructure.Data
@model IReadOnlyList<MovieListDTO>;

@{
    ViewData["Title"] = "Movies";
}


<head>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            padding: 20px;
        }

        a {
            text-decoration: none
        }

        h1 {
            text-align: center;
            color: #333;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
            color: #333;
        }

        tr:hover {
            background-color: #f9f9f9;
        }

        /* img {
            max-width: 100px;
            height: auto;
        } */

        .button {
            background-color: #4CAF50; /* Green */
            border: none;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 8px;
        }
    </style>
</head>
<body>
    <h1>Movies List</h1>
    @if (User.FindFirstValue(ClaimTypes.Role) is not null && User.FindFirstValue(ClaimTypes.Role)!.Equals(UserRoles.admin, StringComparison.OrdinalIgnoreCase))
    {
        <a class="button" href="@Url.Action($"Create", "Movies")">Add new</a>
        <br />
    }
    @* <table>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Rating</th>
            <th>Total Rates</th>
            <th>Image</th>
            <th>Actions</th>
        </tr>
        
        @foreach (var movie in Model)
        {
            <tr>
                <td>@movie.Name</td>
                <td>@movie.Description</td>
                <td>@movie.Rating</td>
                <td>@movie.TotalRates</td>
                <td><img src="data:image;base64,@Convert.ToBase64String(movie.Image)" /></td>
                <td>
                    <a class="button" href="@Url.Action("Detail", "Movies", new { id = movie.Id })">Details</a>
                    @if (User.FindFirst(ClaimTypes.Email)!.Value.Equals("admin@admin.com", StringComparison.OrdinalIgnoreCase))
                    {
                        <a class="button" href="@Url.Action($"Delete", "Movies", new { id = movie.Id })">Delete</a>
                        <br />
                    }
                </td>
                
            </tr>

        }
    </table> *@
    
    <div class="container mt-3">
        <!-- Bootstrap alert message -->
        @if (ViewBag.NewMovieCreated != null && (bool)ViewBag.NewMovieCreated)
        {
            <div id="alertMessage" class="alert alert-success" role="alert">
                Movie saved successfully!
            </div>
            <script>
                setTimeout(function () {
                    var alertMessage = document.getElementById('alertMessage');
                    if (alertMessage) {
                        alertMessage.style.display = 'none';
                    }
                }, 2000);
            </script>
        }
    </div>
    <div class="container mt-3">
        <!-- Bootstrap alert message -->
        @if (ViewBag.MovieDeleted != null && (bool)ViewBag.MovieDeleted)
        {
            <div id="alertMessage" class="alert alert-success" role="alert">
                Movie Deleted!
            </div>
            <script>
                setTimeout(function () {
                    var alertMessage = document.getElementById('alertMessage');
                    if (alertMessage) {
                        alertMessage.style.display = 'none';
                    }
                }, 2000);
            </script>
        }
    </div>

    <div class="container text-center">
        <div class="row row-cols-4 gx-4 gy-2">
        @foreach(var movie in Model)
        {
            <a href="@Url.Action("Detail", "Movies", new {id = movie.Id})">
                <div>
                    <img src="data:image;base64,@Convert.ToBase64String(movie.Image)" style="width: 300px;" class="rounded-5"/>
                    <h5>@movie.Name</h5>
                </div>
            </a>
        }
        </div>
    </div>
    </body>

